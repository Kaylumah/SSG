name: .NET (CI)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  # Setup build dependencies
  setup-dotnet:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet: [ 3.1.x, 5.0.x ]
    steps:
      - name: Setup .NET (${{ matrix.dotnet }})
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ matrix.dotnet }}

  setup-node:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [ 15.x ]
    steps:
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

  build:
    needs: [ setup-dotnet, setup-node ]
    runs-on: ubuntu-latest
    env:
      config: 'Release'

    steps:
    - uses: actions/checkout@v2
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration $config --no-restore
    - name: Test
      run: dotnet test --configuration $config --no-build --verbosity normal
    - name: Run Client
      run: dotnet "artifacts/bin/Kaylumah.Ssg.Client.SiteGenerator/$config/netcoreapp3.1/Kaylumah.Ssg.Client.SiteGenerator.dll"
    - name: Archive production artifacts
      uses: actions/upload-artifact@v2
      with:
        name: dist-folder
        path: |
          dist

  prepare:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download a single artifact
        uses: actions/download-artifact@v2
        with:
          name: dist-folder
      - run: npm i
      - run: npm run build --if-present
      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: .
      # - run: npm test

